<?php

/**
 * ProjectTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ProjectTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ProjectTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Project');
    }

    /**
     * Returns an instance of this class.
     *
     * @return response all active projects from ProjectTable 
     */
    public static function getProjects()
    {
        return self::getInstance()
            ->createQuery('p')
            ->select('p.*, c.slug slug_1')
            ->addSelect('(TO_DAYS(p.ended_at) - TO_DAYS(p.started_at)) days_left')
            ->addSelect('a.*,sum(a.project_amount) all_amount')
            ->addSelect('(FORMAT((sum(a.project_amount)/p.target),2)*100) as all_percent_amount')
            ->addSelect('count(a.id) all_count')
            ->leftJoin('p.Amount a')
            ->leftJoin('p.Category c')
            ->where('p.status_id = 2')
	    ->groupBy('p.id');
    }
    
    /**
     * Returns an instance of this class.
     *
     * @return execute all active projects from ProjectTable  
     */
    public static function getProjectsList($request)
    {
        $q = self::getProjects();
        if($slug = $request->getParameter('slug_1'))
        {
            $q->addWhere('c.slug = ?',$slug);	    
        }
        
        return $q->execute();
    }

    public function retrieveProject(array $parameters)
    {
        $q = self::getProjects()
            ->addWhere('p.slug = ?',$parameters['slug']);

        return $q->fetchOne();
    }
/*
    public function getProject(array $parameters)
    {
        $q = self::getProjects()
            ->addWhere('p.slug = ?',$parameters['slug']);
        
        return $q->fetchOne();
    }
*/



    /*
    public static function getNewProjects()
    {
        return self::getProjects()->execute();
    }
    public static function getArrProjects()
    {
        return self::getProjects()->fetchArray();
    }     
      ...->execute();
      ...->fetchArray();
      ...->execute()->getFirst()()
      ...->execute()->count();
      ...->count();
      ...->getSqlQuery();       
      ...->fetchOne();

      Doctrine::getTable('Table')->findOneById(x)->toArray();
      PersonTable::getInstance()->findOneById($x, Doctrine_Core::HYDRATE_ARRAY);
      ...->getArrayResult();
      $query->execute(array(), Doctrine_Core::HYDRATE_ARRAY))      - это тоже массив
    */
}
